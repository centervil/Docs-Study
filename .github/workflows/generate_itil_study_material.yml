name: Generate ITIL4 Study Material

on:
  schedule:
    # JST 0:00:00 (UTC 15:00) daily
    - cron: '0 15 * * *'
  workflow_dispatch: # Allow manual trigger for testing

env:
  FORMAT_FILE_PATH: templates/study_format.md
  OUTPUT_FOLDER_PATH: security-study/ITIL4-Foundation/
  MAX_DAY_NUMBER: 30

jobs:
  generate-study-material:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Content-Converter
      run: |
        pip install -r https://raw.githubusercontent.com/centervil/Content-Converter/refs/heads/main/requirements.txt
        pip install content-converter
    
    - name: Read current day number
      id: read_day
      run: | 
        CURRENT_DAY=$(cat security-study/ITIL4-Foundation/current_day.txt)
        echo "current_day=$CURRENT_DAY" >> $GITHUB_OUTPUT
        echo "Current day: $CURRENT_DAY"
    
    - name: Check if day number exceeds maximum
      id: check_max
      run: |
        CURRENT_DAY=${{ steps.read_day.outputs.current_day }}
        if [ "$CURRENT_DAY" -gt "$MAX_DAY_NUMBER" ]; then
          echo "Day number $CURRENT_DAY exceeds maximum $MAX_DAY_NUMBER. Stopping workflow."
          echo "should_continue=false" >> $GITHUB_OUTPUT
        else
          echo "should_continue=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Generate prompt from template
      id: generate_prompt
      if: steps.check_max.outputs.should_continue == 'true'
      run: |
        CURRENT_DAY=${{ steps.read_day.outputs.current_day }}
        TEMPLATE_CONTENT=$(cat prompts/itil_day_content_prompt_template.md)
        PROMPT=$(echo "$TEMPLATE_CONTENT" | sed "s/\[DAY_NUMBER\]/$CURRENT_DAY/g")
        
        echo "prompt<<EOF" >> $GITHUB_OUTPUT
        echo "$PROMPT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "Generated prompt: $PROMPT"
    
    - name: Generate study material using content-converter
      if: steps.check_max.outputs.should_continue == 'true'
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        LLM_MODEL: ${{ secrets.LLM_MODEL }}
      run: |
        CURRENT_DAY=${{ steps.read_day.outputs.current_day }}
        PROMPT="${{ steps.generate_prompt.outputs.prompt }}"

        python -m content_converter.cli \
          --input "security-study/ITIL4-Foundation/00_plan.md" \
          --output "$OUTPUT_FOLDER_PATH/Day${CURRENT_DAY}_ITIL4-Foundation_study.md" \
          --template "$FORMAT_FILE_PATH" \
          --prompt "$PROMPT"
    
    - name: Increment day number and save
      if: steps.check_max.outputs.should_continue == 'true'
      run: |
        CURRENT_DAY=${{ steps.read_day.outputs.current_day }}
        NEXT_DAY=$((CURRENT_DAY + 1))
        echo "$NEXT_DAY" > security-study/ITIL4-Foundation/current_day.txt
        echo "Updated day number to: $NEXT_DAY"
    
    - name: Configure Git
      if: steps.check_max.outputs.should_continue == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Commit and push changes
      if: steps.check_max.outputs.should_continue == 'true'
      run: |
        CURRENT_DAY=${{ steps.read_day.outputs.current_day }}
        
        # Add the generated study material file
        git add "$OUTPUT_FOLDER_PATH/Day${CURRENT_DAY}_ITIL4-Foundation_study.md"
        
        # Add the updated current_day.txt
        git add security-study/ITIL4-Foundation/current_day.txt
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add Day${CURRENT_DAY} ITIL 4 study material"
          git push
        fi
    
    - name: Workflow completed successfully
      if: steps.check_max.outputs.should_continue == 'true'
      run: |
        CURRENT_DAY=${{ steps.read_day.outputs.current_day }}
        echo "Successfully generated Day${CURRENT_DAY} ITIL 4 study material"
    
    - name: Workflow stopped - maximum day reached
      if: steps.check_max.outputs.should_continue == 'false'
      run: |
        CURRENT_DAY=${{ steps.read_day.outputs.current_day }}
        echo "Workflow stopped: Day number $CURRENT_DAY exceeds maximum $MAX_DAY_NUMBER" 